/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import static Controller.controllerPersons.addPerson;
import static Controller.controllerPersons.deletePerson;
import static Controller.controllerPersons.getListOfPersonsByName;
import static Controller.controllerPersons.getPersonById;
import static Controller.controllerPersons.moveIdAndNameToView;
import static Controller.controllerPersons.numberOfPersons;
import static Controller.controllerPersons.startDB;
import static Controller.controllerPersons.updatePerson;
import Controller.exceptions.PersonException;
import Model.Customer;
import Model.Employee;
import Model.Person;
import static MyAPI.textManagement.isValidWithMinus;
import static View.createVehicle.getVehicle;
import java.awt.Color;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author rambo
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        setLocationRelativeTo(null);
        try {
            startDB();
        } catch (PersonException | SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            System.out.println(numberOfPersons());
            labelNumberOfPersons.setText(numberOfPersons());
        } catch (PersonException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelPrincipal = new javax.swing.JPanel();
        menuOpc = new javax.swing.JPanel();
        registerLabelMenuOpc = new javax.swing.JLabel();
        deleteLabelMenuOpc = new javax.swing.JLabel();
        modifyLabelMenuOpc = new javax.swing.JLabel();
        searchLabelMenuOpc = new javax.swing.JLabel();
        showLabelMenuOpc = new javax.swing.JLabel();
        spliter1 = new javax.swing.JLabel();
        spliter2 = new javax.swing.JLabel();
        spliter3 = new javax.swing.JLabel();
        spliter4 = new javax.swing.JLabel();
        tabbedPanel = new javax.swing.JTabbedPane();
        welcomeTab = new javax.swing.JPanel();
        welcomeText = new javax.swing.JLabel();
        labelNumberOfPersons = new javax.swing.JLabel();
        welcomeText1 = new javax.swing.JLabel();
        registerTab = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        idValue = new javax.swing.JSpinner();
        nameLabel = new javax.swing.JLabel();
        nameValue = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        genderValue = new javax.swing.JComboBox<>();
        ageLabel = new javax.swing.JLabel();
        ageValue = new javax.swing.JSpinner();
        addressLabel = new javax.swing.JLabel();
        addressValue = new javax.swing.JTextField();
        vehicleLabel = new javax.swing.JLabel();
        vehicleButton = new javax.swing.JButton();
        typeLabel = new javax.swing.JLabel();
        typeValue = new javax.swing.JComboBox<>();
        idEmployeeLabel = new javax.swing.JLabel();
        idEmployeeValue = new javax.swing.JSpinner();
        salaryLabel = new javax.swing.JLabel();
        salaryValue = new javax.swing.JSpinner();
        idCustomerLabel = new javax.swing.JLabel();
        idCustomerValue = new javax.swing.JSpinner();
        dateLabel = new javax.swing.JLabel();
        dateValue = new javax.swing.JTextField();
        vipLabel = new javax.swing.JLabel();
        vipValue = new javax.swing.JToggleButton();
        registerButton = new javax.swing.JButton();
        deleteTab = new javax.swing.JPanel();
        selectPerson = new javax.swing.JComboBox<>();
        labelPerson = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        scrollPanel = new javax.swing.JScrollPane();
        personParameters = new javax.swing.JTextArea();
        checkButton1 = new javax.swing.JButton();
        modifyTab = new javax.swing.JPanel();
        idLabel1 = new javax.swing.JLabel();
        idValue1 = new javax.swing.JSpinner();
        nameLabel1 = new javax.swing.JLabel();
        nameValue1 = new javax.swing.JTextField();
        genderLabel1 = new javax.swing.JLabel();
        genderValue1 = new javax.swing.JComboBox<>();
        ageLabel1 = new javax.swing.JLabel();
        ageValue1 = new javax.swing.JSpinner();
        addressLabel1 = new javax.swing.JLabel();
        addressValue1 = new javax.swing.JTextField();
        vehicleLabel1 = new javax.swing.JLabel();
        vehicleButton1 = new javax.swing.JButton();
        idEmployeeLabel1 = new javax.swing.JLabel();
        idEmployeeValue1 = new javax.swing.JSpinner();
        salaryLabel1 = new javax.swing.JLabel();
        salaryValue1 = new javax.swing.JSpinner();
        idCustomerLabel1 = new javax.swing.JLabel();
        idCustomerValue1 = new javax.swing.JSpinner();
        dateLabel1 = new javax.swing.JLabel();
        dateValue1 = new javax.swing.JTextField();
        vipLabel1 = new javax.swing.JLabel();
        vipValue1 = new javax.swing.JToggleButton();
        updateButton = new javax.swing.JButton();
        checkValue = new javax.swing.JComboBox<>();
        checkButton = new javax.swing.JButton();
        searchTab = new javax.swing.JPanel();
        labelPerson1 = new javax.swing.JLabel();
        sendSearchButton = new javax.swing.JButton();
        nameValue2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        showTab = new javax.swing.JPanel();
        selectPerson1 = new javax.swing.JComboBox<>();
        scrollPanel3 = new javax.swing.JScrollPane();
        personParameters3 = new javax.swing.JTextArea();
        checkButton2 = new javax.swing.JButton();
        labelPerson3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        panelPrincipal.setBackground(new java.awt.Color(204, 204, 204));
        panelPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menuOpc.setBackground(new java.awt.Color(153, 153, 153));
        menuOpc.setForeground(new java.awt.Color(153, 153, 153));
        menuOpc.setLayout(new java.awt.GridBagLayout());

        registerLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
        registerLabelMenuOpc.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        registerLabelMenuOpc.setForeground(new java.awt.Color(0, 0, 0));
        registerLabelMenuOpc.setText("REGISTER");
        registerLabelMenuOpc.setOpaque(true);
        registerLabelMenuOpc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerLabelMenuOpcMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerLabelMenuOpcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerLabelMenuOpcMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(registerLabelMenuOpc, gridBagConstraints);

        deleteLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
        deleteLabelMenuOpc.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        deleteLabelMenuOpc.setForeground(new java.awt.Color(0, 0, 0));
        deleteLabelMenuOpc.setText("DELETE");
        deleteLabelMenuOpc.setOpaque(true);
        deleteLabelMenuOpc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteLabelMenuOpcMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteLabelMenuOpcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteLabelMenuOpcMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(deleteLabelMenuOpc, gridBagConstraints);

        modifyLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
        modifyLabelMenuOpc.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        modifyLabelMenuOpc.setForeground(new java.awt.Color(0, 0, 0));
        modifyLabelMenuOpc.setText("MODIFY");
        modifyLabelMenuOpc.setOpaque(true);
        modifyLabelMenuOpc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifyLabelMenuOpcMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modifyLabelMenuOpcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                modifyLabelMenuOpcMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(modifyLabelMenuOpc, gridBagConstraints);

        searchLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
        searchLabelMenuOpc.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        searchLabelMenuOpc.setForeground(new java.awt.Color(0, 0, 0));
        searchLabelMenuOpc.setText("SEARCH");
        searchLabelMenuOpc.setOpaque(true);
        searchLabelMenuOpc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchLabelMenuOpcMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchLabelMenuOpcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchLabelMenuOpcMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(searchLabelMenuOpc, gridBagConstraints);

        showLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
        showLabelMenuOpc.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        showLabelMenuOpc.setForeground(new java.awt.Color(0, 0, 0));
        showLabelMenuOpc.setText("SHOW");
        showLabelMenuOpc.setOpaque(true);
        showLabelMenuOpc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showLabelMenuOpcMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showLabelMenuOpcMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                showLabelMenuOpcMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(showLabelMenuOpc, gridBagConstraints);

        spliter1.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        spliter1.setForeground(new java.awt.Color(51, 51, 51));
        spliter1.setText("|");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(spliter1, gridBagConstraints);

        spliter2.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        spliter2.setForeground(new java.awt.Color(51, 51, 51));
        spliter2.setText("|");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(spliter2, gridBagConstraints);

        spliter3.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        spliter3.setForeground(new java.awt.Color(51, 51, 51));
        spliter3.setText("|");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(spliter3, gridBagConstraints);

        spliter4.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        spliter4.setForeground(new java.awt.Color(51, 51, 51));
        spliter4.setText("|");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 35, 0, 35);
        menuOpc.add(spliter4, gridBagConstraints);

        panelPrincipal.add(menuOpc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 80));

        welcomeTab.setBackground(new java.awt.Color(204, 204, 204));
        welcomeTab.setLayout(new java.awt.GridBagLayout());

        welcomeText.setFont(new java.awt.Font("Anta", 0, 48)); // NOI18N
        welcomeText.setForeground(new java.awt.Color(0, 0, 0));
        welcomeText.setText("NUMBER OF PERSONS: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        welcomeTab.add(welcomeText, gridBagConstraints);

        labelNumberOfPersons.setFont(new java.awt.Font("Anta", 0, 48)); // NOI18N
        labelNumberOfPersons.setForeground(new java.awt.Color(0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        welcomeTab.add(labelNumberOfPersons, gridBagConstraints);

        welcomeText1.setFont(new java.awt.Font("Anta", 0, 48)); // NOI18N
        welcomeText1.setForeground(new java.awt.Color(0, 0, 0));
        welcomeText1.setText("WELCOME");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        welcomeTab.add(welcomeText1, gridBagConstraints);

        tabbedPanel.addTab("WELCOME", welcomeTab);

        registerTab.setBackground(new java.awt.Color(204, 204, 204));
        registerTab.setLayout(new java.awt.GridBagLayout());

        idLabel.setBackground(new java.awt.Color(255, 255, 255));
        idLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idLabel.setForeground(new java.awt.Color(0, 0, 0));
        idLabel.setText("ID");
        idLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(60, 0, 10, 0);
        registerTab.add(idLabel, gridBagConstraints);

        idValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idValue.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        idValue.setBorder(null);
        idValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        registerTab.add(idValue, gridBagConstraints);

        nameLabel.setBackground(new java.awt.Color(255, 255, 255));
        nameLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(0, 0, 0));
        nameLabel.setText("NAME");
        nameLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        nameLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        registerTab.add(nameLabel, gridBagConstraints);

        nameValue.setBackground(new java.awt.Color(204, 204, 204));
        nameValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        nameValue.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));
        nameValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        registerTab.add(nameValue, gridBagConstraints);

        genderLabel.setBackground(new java.awt.Color(255, 255, 255));
        genderLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(0, 0, 0));
        genderLabel.setText("GENDER");
        genderLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        genderLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        registerTab.add(genderLabel, gridBagConstraints);

        genderValue.setBackground(new java.awt.Color(0, 0, 0));
        genderValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        genderValue.setForeground(new java.awt.Color(255, 255, 255));
        genderValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HOMBRE", "MUJER" }));
        genderValue.setBorder(null);
        genderValue.setOpaque(true);
        genderValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        registerTab.add(genderValue, gridBagConstraints);

        ageLabel.setBackground(new java.awt.Color(255, 255, 255));
        ageLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        ageLabel.setForeground(new java.awt.Color(0, 0, 0));
        ageLabel.setText("AGE");
        ageLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        ageLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        registerTab.add(ageLabel, gridBagConstraints);

        ageValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        ageValue.setBorder(null);
        ageValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        registerTab.add(ageValue, gridBagConstraints);

        addressLabel.setBackground(new java.awt.Color(255, 255, 255));
        addressLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(0, 0, 0));
        addressLabel.setText("ADDRESS");
        addressLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        addressLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        registerTab.add(addressLabel, gridBagConstraints);

        addressValue.setBackground(new java.awt.Color(204, 204, 204));
        addressValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        addressValue.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));
        addressValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        registerTab.add(addressValue, gridBagConstraints);

        vehicleLabel.setBackground(new java.awt.Color(255, 255, 255));
        vehicleLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vehicleLabel.setForeground(new java.awt.Color(0, 0, 0));
        vehicleLabel.setText("VEHICLE");
        vehicleLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        vehicleLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        registerTab.add(vehicleLabel, gridBagConstraints);

        vehicleButton.setBackground(new java.awt.Color(0, 0, 0));
        vehicleButton.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vehicleButton.setForeground(new java.awt.Color(255, 255, 255));
        vehicleButton.setText("ADD VEHICLE");
        vehicleButton.setBorder(null);
        vehicleButton.setPreferredSize(new java.awt.Dimension(400, 50));
        vehicleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        registerTab.add(vehicleButton, gridBagConstraints);

        typeLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        typeLabel.setForeground(new java.awt.Color(0, 0, 0));
        typeLabel.setText("TYPE");
        typeLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        typeLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(60, 200, 10, 0);
        registerTab.add(typeLabel, gridBagConstraints);

        typeValue.setBackground(new java.awt.Color(0, 0, 0));
        typeValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        typeValue.setForeground(new java.awt.Color(255, 255, 255));
        typeValue.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "EMPLOYEE", "CUSTOMER" }));
        typeValue.setBorder(null);
        typeValue.setOpaque(true);
        typeValue.setPreferredSize(new java.awt.Dimension(400, 50));
        typeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeValueActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        registerTab.add(typeValue, gridBagConstraints);

        idEmployeeLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idEmployeeLabel.setForeground(new java.awt.Color(0, 0, 0));
        idEmployeeLabel.setText("ID EMPLOYEE");
        idEmployeeLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idEmployeeLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        registerTab.add(idEmployeeLabel, gridBagConstraints);

        idEmployeeValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idEmployeeValue.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        idEmployeeValue.setBorder(null);
        idEmployeeValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        registerTab.add(idEmployeeValue, gridBagConstraints);

        salaryLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        salaryLabel.setForeground(new java.awt.Color(0, 0, 0));
        salaryLabel.setText("SALARY");
        salaryLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        salaryLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        registerTab.add(salaryLabel, gridBagConstraints);

        salaryValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        salaryValue.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        salaryValue.setBorder(null);
        salaryValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        registerTab.add(salaryValue, gridBagConstraints);

        idCustomerLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idCustomerLabel.setForeground(new java.awt.Color(0, 0, 0));
        idCustomerLabel.setText("ID CUSTOMER");
        idCustomerLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idCustomerLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        registerTab.add(idCustomerLabel, gridBagConstraints);

        idCustomerValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idCustomerValue.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        idCustomerValue.setBorder(null);
        idCustomerValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        registerTab.add(idCustomerValue, gridBagConstraints);

        dateLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(0, 0, 0));
        dateLabel.setText("DATE");
        dateLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        dateLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        registerTab.add(dateLabel, gridBagConstraints);

        dateValue.setBackground(new java.awt.Color(204, 204, 204));
        dateValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        dateValue.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));
        dateValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        registerTab.add(dateValue, gridBagConstraints);

        vipLabel.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vipLabel.setForeground(new java.awt.Color(0, 0, 0));
        vipLabel.setText("VIP");
        vipLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        vipLabel.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        registerTab.add(vipLabel, gridBagConstraints);

        vipValue.setBackground(new java.awt.Color(255, 0, 0));
        vipValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vipValue.setForeground(new java.awt.Color(255, 255, 255));
        vipValue.setText("IS VIP?");
        vipValue.setBorder(null);
        vipValue.setPreferredSize(new java.awt.Dimension(400, 50));
        vipValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vipValueActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        registerTab.add(vipValue, gridBagConstraints);

        registerButton.setBackground(new java.awt.Color(0, 0, 0));
        registerButton.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        registerButton.setForeground(new java.awt.Color(255, 255, 255));
        registerButton.setText("REGISTER");
        registerButton.setBorder(null);
        registerButton.setPreferredSize(new java.awt.Dimension(200, 50));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 10, 0);
        registerTab.add(registerButton, gridBagConstraints);

        tabbedPanel.addTab("REGISTER", registerTab);

        deleteTab.setBackground(new java.awt.Color(204, 204, 204));
        deleteTab.setLayout(new java.awt.GridBagLayout());

        selectPerson.setBackground(new java.awt.Color(255, 255, 255));
        selectPerson.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        selectPerson.setForeground(new java.awt.Color(255, 255, 255));
        selectPerson.setPreferredSize(new java.awt.Dimension(300, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        deleteTab.add(selectPerson, gridBagConstraints);

        labelPerson.setBackground(new java.awt.Color(255, 255, 255));
        labelPerson.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        labelPerson.setForeground(new java.awt.Color(0, 0, 0));
        labelPerson.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPerson.setText("PERSON");
        labelPerson.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelPerson.setPreferredSize(new java.awt.Dimension(300, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        deleteTab.add(labelPerson, gridBagConstraints);

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.setPreferredSize(new java.awt.Dimension(300, 60));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        deleteTab.add(deleteButton, gridBagConstraints);

        scrollPanel.setPreferredSize(new java.awt.Dimension(700, 400));

        personParameters.setEditable(false);
        personParameters.setBackground(new java.awt.Color(255, 255, 255));
        personParameters.setColumns(20);
        personParameters.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        personParameters.setRows(5);
        scrollPanel.setViewportView(personParameters);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        deleteTab.add(scrollPanel, gridBagConstraints);

        checkButton1.setBackground(new java.awt.Color(0, 0, 0));
        checkButton1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        checkButton1.setForeground(new java.awt.Color(255, 255, 255));
        checkButton1.setText("CHECK");
        checkButton1.setPreferredSize(new java.awt.Dimension(400, 50));
        checkButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        deleteTab.add(checkButton1, gridBagConstraints);

        tabbedPanel.addTab("DELETE", deleteTab);

        modifyTab.setBackground(new java.awt.Color(204, 204, 204));
        modifyTab.setLayout(new java.awt.GridBagLayout());

        idLabel1.setBackground(new java.awt.Color(255, 255, 255));
        idLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idLabel1.setForeground(new java.awt.Color(0, 0, 0));
        idLabel1.setText("ID");
        idLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 10, 0);
        modifyTab.add(idLabel1, gridBagConstraints);

        idValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idValue1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        idValue1.setBorder(null);
        idValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        modifyTab.add(idValue1, gridBagConstraints);

        nameLabel1.setBackground(new java.awt.Color(255, 255, 255));
        nameLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        nameLabel1.setForeground(new java.awt.Color(0, 0, 0));
        nameLabel1.setText("NAME");
        nameLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        nameLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        modifyTab.add(nameLabel1, gridBagConstraints);

        nameValue1.setBackground(new java.awt.Color(204, 204, 204));
        nameValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        nameValue1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));
        nameValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        modifyTab.add(nameValue1, gridBagConstraints);

        genderLabel1.setBackground(new java.awt.Color(255, 255, 255));
        genderLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        genderLabel1.setForeground(new java.awt.Color(0, 0, 0));
        genderLabel1.setText("GENDER");
        genderLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        genderLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        modifyTab.add(genderLabel1, gridBagConstraints);

        genderValue1.setBackground(new java.awt.Color(0, 0, 0));
        genderValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        genderValue1.setForeground(new java.awt.Color(255, 255, 255));
        genderValue1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HOMBRE", "MUJER" }));
        genderValue1.setBorder(null);
        genderValue1.setOpaque(true);
        genderValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        modifyTab.add(genderValue1, gridBagConstraints);

        ageLabel1.setBackground(new java.awt.Color(255, 255, 255));
        ageLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        ageLabel1.setForeground(new java.awt.Color(0, 0, 0));
        ageLabel1.setText("AGE");
        ageLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        ageLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        modifyTab.add(ageLabel1, gridBagConstraints);

        ageValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        ageValue1.setBorder(null);
        ageValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        modifyTab.add(ageValue1, gridBagConstraints);

        addressLabel1.setBackground(new java.awt.Color(255, 255, 255));
        addressLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        addressLabel1.setForeground(new java.awt.Color(0, 0, 0));
        addressLabel1.setText("ADDRESS");
        addressLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        addressLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        modifyTab.add(addressLabel1, gridBagConstraints);

        addressValue1.setBackground(new java.awt.Color(204, 204, 204));
        addressValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        addressValue1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));
        addressValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        modifyTab.add(addressValue1, gridBagConstraints);

        vehicleLabel1.setBackground(new java.awt.Color(255, 255, 255));
        vehicleLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vehicleLabel1.setForeground(new java.awt.Color(0, 0, 0));
        vehicleLabel1.setText("VEHICLE");
        vehicleLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        vehicleLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        modifyTab.add(vehicleLabel1, gridBagConstraints);

        vehicleButton1.setBackground(new java.awt.Color(0, 0, 0));
        vehicleButton1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vehicleButton1.setForeground(new java.awt.Color(255, 255, 255));
        vehicleButton1.setText("ADD VEHICLE");
        vehicleButton1.setBorder(null);
        vehicleButton1.setPreferredSize(new java.awt.Dimension(400, 50));
        vehicleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        modifyTab.add(vehicleButton1, gridBagConstraints);

        idEmployeeLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idEmployeeLabel1.setForeground(new java.awt.Color(0, 0, 0));
        idEmployeeLabel1.setText("ID EMPLOYEE");
        idEmployeeLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idEmployeeLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        modifyTab.add(idEmployeeLabel1, gridBagConstraints);

        idEmployeeValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idEmployeeValue1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        idEmployeeValue1.setBorder(null);
        idEmployeeValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        modifyTab.add(idEmployeeValue1, gridBagConstraints);

        salaryLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        salaryLabel1.setForeground(new java.awt.Color(0, 0, 0));
        salaryLabel1.setText("SALARY");
        salaryLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        salaryLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        modifyTab.add(salaryLabel1, gridBagConstraints);

        salaryValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        salaryValue1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        salaryValue1.setBorder(null);
        salaryValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        modifyTab.add(salaryValue1, gridBagConstraints);

        idCustomerLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idCustomerLabel1.setForeground(new java.awt.Color(0, 0, 0));
        idCustomerLabel1.setText("ID CUSTOMER");
        idCustomerLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idCustomerLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        modifyTab.add(idCustomerLabel1, gridBagConstraints);

        idCustomerValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        idCustomerValue1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        idCustomerValue1.setBorder(null);
        idCustomerValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        modifyTab.add(idCustomerValue1, gridBagConstraints);

        dateLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        dateLabel1.setForeground(new java.awt.Color(0, 0, 0));
        dateLabel1.setText("DATE");
        dateLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        dateLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        modifyTab.add(dateLabel1, gridBagConstraints);

        dateValue1.setBackground(new java.awt.Color(204, 204, 204));
        dateValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        dateValue1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));
        dateValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        modifyTab.add(dateValue1, gridBagConstraints);

        vipLabel1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vipLabel1.setForeground(new java.awt.Color(0, 0, 0));
        vipLabel1.setText("VIP");
        vipLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        vipLabel1.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(10, 200, 5, 0);
        modifyTab.add(vipLabel1, gridBagConstraints);

        vipValue1.setBackground(new java.awt.Color(255, 0, 0));
        vipValue1.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        vipValue1.setForeground(new java.awt.Color(255, 255, 255));
        vipValue1.setText("IS VIP?");
        vipValue1.setBorder(null);
        vipValue1.setPreferredSize(new java.awt.Dimension(400, 50));
        vipValue1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vipValue1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 10, 0);
        modifyTab.add(vipValue1, gridBagConstraints);

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("UPDATE");
        updateButton.setBorder(null);
        updateButton.setPreferredSize(new java.awt.Dimension(200, 50));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 10, 0);
        modifyTab.add(updateButton, gridBagConstraints);

        checkValue.setBackground(new java.awt.Color(0, 0, 0));
        checkValue.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        checkValue.setForeground(new java.awt.Color(255, 255, 255));
        checkValue.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        modifyTab.add(checkValue, gridBagConstraints);

        checkButton.setBackground(new java.awt.Color(0, 0, 0));
        checkButton.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        checkButton.setForeground(new java.awt.Color(255, 255, 255));
        checkButton.setText("CHECK");
        checkButton.setPreferredSize(new java.awt.Dimension(400, 50));
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        modifyTab.add(checkButton, gridBagConstraints);

        tabbedPanel.addTab("MODIFY", modifyTab);

        searchTab.setBackground(new java.awt.Color(204, 204, 204));
        searchTab.setLayout(new java.awt.GridBagLayout());

        labelPerson1.setBackground(new java.awt.Color(255, 255, 255));
        labelPerson1.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        labelPerson1.setForeground(new java.awt.Color(0, 0, 0));
        labelPerson1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPerson1.setText("PERSON");
        labelPerson1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelPerson1.setPreferredSize(new java.awt.Dimension(300, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        searchTab.add(labelPerson1, gridBagConstraints);

        sendSearchButton.setBackground(new java.awt.Color(0, 0, 0));
        sendSearchButton.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        sendSearchButton.setForeground(new java.awt.Color(255, 255, 255));
        sendSearchButton.setText("SEND");
        sendSearchButton.setPreferredSize(new java.awt.Dimension(300, 60));
        sendSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendSearchButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        searchTab.add(sendSearchButton, gridBagConstraints);

        nameValue2.setBackground(new java.awt.Color(204, 204, 204));
        nameValue2.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        nameValue2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 0, 0)));
        nameValue2.setPreferredSize(new java.awt.Dimension(400, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 50);
        searchTab.add(nameValue2, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(600, 300));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setPreferredSize(new java.awt.Dimension(600, 300));
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        searchTab.add(jScrollPane1, gridBagConstraints);

        tabbedPanel.addTab("SEARCH", searchTab);

        showTab.setBackground(new java.awt.Color(204, 204, 204));
        showTab.setLayout(new java.awt.GridBagLayout());

        selectPerson1.setBackground(new java.awt.Color(255, 255, 255));
        selectPerson1.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        selectPerson1.setForeground(new java.awt.Color(255, 255, 255));
        selectPerson1.setPreferredSize(new java.awt.Dimension(300, 60));
        selectPerson1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectPerson1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        showTab.add(selectPerson1, gridBagConstraints);

        scrollPanel3.setPreferredSize(new java.awt.Dimension(700, 400));

        personParameters3.setEditable(false);
        personParameters3.setBackground(new java.awt.Color(255, 255, 255));
        personParameters3.setColumns(20);
        personParameters3.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        personParameters3.setRows(5);
        scrollPanel3.setViewportView(personParameters3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        showTab.add(scrollPanel3, gridBagConstraints);

        checkButton2.setBackground(new java.awt.Color(0, 0, 0));
        checkButton2.setFont(new java.awt.Font("Anta", 0, 24)); // NOI18N
        checkButton2.setForeground(new java.awt.Color(255, 255, 255));
        checkButton2.setText("CHECK");
        checkButton2.setPreferredSize(new java.awt.Dimension(400, 50));
        checkButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        showTab.add(checkButton2, gridBagConstraints);

        labelPerson3.setBackground(new java.awt.Color(255, 255, 255));
        labelPerson3.setFont(new java.awt.Font("Anta", 0, 36)); // NOI18N
        labelPerson3.setForeground(new java.awt.Color(0, 0, 0));
        labelPerson3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPerson3.setText("PERSON");
        labelPerson3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelPerson3.setPreferredSize(new java.awt.Dimension(300, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 50, 0);
        showTab.add(labelPerson3, gridBagConstraints);

        tabbedPanel.addTab("SHOW", showTab);

        panelPrincipal.add(tabbedPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -40, 1500, 940));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerLabelMenuOpcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerLabelMenuOpcMouseClicked
        tabbedPanel.setSelectedIndex(1);

        // PARAMETROS EMPLEADOS Y CLIENTES
        idEmployeeLabel.setVisible(false);
        idEmployeeValue.setVisible(false);
        salaryLabel.setVisible(false);
        salaryValue.setVisible(false);
        idCustomerLabel.setVisible(false);
        idCustomerValue.setVisible(false);
        dateLabel.setVisible(false);
        dateValue.setVisible(false);
        vipLabel.setVisible(false);
        vipValue.setVisible(false);

        registerButton.setVisible(false);
    }//GEN-LAST:event_registerLabelMenuOpcMouseClicked

    private void deleteLabelMenuOpcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLabelMenuOpcMouseClicked
        tabbedPanel.setSelectedIndex(2);
        selectPerson.removeAllItems();
        try {
            String[][] idAndName = moveIdAndNameToView();
            for (String[] idAndName1 : idAndName) {
                selectPerson.addItem(idAndName1[0] + " - " + idAndName1[1]);
            }
        } catch (PersonException ex) {
            JOptionPane.showMessageDialog(this, "BBDD IS EMPTY", "WRONG", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteLabelMenuOpcMouseClicked

    private void modifyLabelMenuOpcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyLabelMenuOpcMouseClicked
        tabbedPanel.setSelectedIndex(3);
        // PARAMETROS PERSONA
        idLabel1.setVisible(false);
        idValue1.setVisible(false);
        nameLabel1.setVisible(false);
        nameValue1.setVisible(false);
        genderLabel1.setVisible(false);
        genderValue1.setVisible(false);
        ageLabel1.setVisible(false);
        ageValue1.setVisible(false);
        addressLabel1.setVisible(false);
        addressValue1.setVisible(false);

        // PARAMETROS EMPLEADOS Y CLIENTES
        idEmployeeLabel1.setVisible(false);
        idEmployeeValue1.setVisible(false);
        salaryLabel1.setVisible(false);
        salaryValue1.setVisible(false);
        idCustomerLabel1.setVisible(false);
        idCustomerValue1.setVisible(false);
        dateLabel1.setVisible(false);
        dateValue1.setVisible(false);
        vipLabel1.setVisible(false);
        vipValue1.setVisible(false);

        // OTROS
        vehicleLabel1.setVisible(false);
        vehicleButton1.setVisible(false);

        updateButton.setVisible(false);

        checkValue.removeAllItems();
        try {
            String[][] idAndName = moveIdAndNameToView();
            for (String[] idAndName1 : idAndName) {
                checkValue.addItem(idAndName1[0] + " - " + idAndName1[1]);
            }
        } catch (PersonException ex) {
            JOptionPane.showMessageDialog(this, "BBDD IS EMPTY", "WRONG", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modifyLabelMenuOpcMouseClicked

    private void searchLabelMenuOpcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchLabelMenuOpcMouseClicked
        tabbedPanel.setSelectedIndex(4);
    }//GEN-LAST:event_searchLabelMenuOpcMouseClicked

    private void showLabelMenuOpcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabelMenuOpcMouseClicked
        tabbedPanel.setSelectedIndex(5);
        selectPerson1.removeAllItems();
        try {
            String[][] idAndName = moveIdAndNameToView();
            for (String[] idAndName1 : idAndName) {
                selectPerson1.addItem(idAndName1[0] + " - " + idAndName1[1]);
            }
        } catch (PersonException ex) {
            JOptionPane.showMessageDialog(this, "BBDD IS EMPTY", "WRONG", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_showLabelMenuOpcMouseClicked

    private void registerLabelMenuOpcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerLabelMenuOpcMouseEntered
        registerLabelMenuOpc.setBackground(new java.awt.Color(102, 102, 102));

    }//GEN-LAST:event_registerLabelMenuOpcMouseEntered

    private void registerLabelMenuOpcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerLabelMenuOpcMouseExited
        registerLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_registerLabelMenuOpcMouseExited

    private void deleteLabelMenuOpcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLabelMenuOpcMouseEntered
        deleteLabelMenuOpc.setBackground(new java.awt.Color(102, 102, 102));
    }//GEN-LAST:event_deleteLabelMenuOpcMouseEntered

    private void deleteLabelMenuOpcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLabelMenuOpcMouseExited
        deleteLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_deleteLabelMenuOpcMouseExited

    private void modifyLabelMenuOpcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyLabelMenuOpcMouseEntered
        modifyLabelMenuOpc.setBackground(new java.awt.Color(102, 102, 102));
    }//GEN-LAST:event_modifyLabelMenuOpcMouseEntered

    private void modifyLabelMenuOpcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyLabelMenuOpcMouseExited
        modifyLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_modifyLabelMenuOpcMouseExited

    private void searchLabelMenuOpcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchLabelMenuOpcMouseEntered
        searchLabelMenuOpc.setBackground(new java.awt.Color(102, 102, 102));
    }//GEN-LAST:event_searchLabelMenuOpcMouseEntered

    private void searchLabelMenuOpcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchLabelMenuOpcMouseExited
        searchLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_searchLabelMenuOpcMouseExited

    private void showLabelMenuOpcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabelMenuOpcMouseEntered
        showLabelMenuOpc.setBackground(new java.awt.Color(102, 102, 102));
    }//GEN-LAST:event_showLabelMenuOpcMouseEntered

    private void showLabelMenuOpcMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showLabelMenuOpcMouseExited
        showLabelMenuOpc.setBackground(new java.awt.Color(153, 153, 153));
    }//GEN-LAST:event_showLabelMenuOpcMouseExited

    private boolean validId(int id) {
        return id < 0;
    }

    private boolean validName(String name) {
        boolean valid = false;
        if (name.isEmpty() || name.isBlank()) {
            valid = true;
        } else if (!isValidWithMinus(name)) {
            valid = true;
        }
        return valid;
    }

    private boolean validGender(char gender) {
        return switch (gender) {
            case 'H', 'M', 'O' ->
                false;
            default ->
                true;
        };
    }

    private boolean validAge(int age) {
        return age < 16;
    }

    private boolean validAddress(String address) {
        boolean valid = false;
        if (address.isEmpty() || address.isBlank()) {
            valid = true;
        } else if (!isValidWithMinus(address)) {
            valid = true;
        }
        return valid;
    }

    private boolean allParametersPersonValids(int id, String name, char gender, int age, String address) {
        boolean allValid = true;
        if (validId(id)) {
            JOptionPane.showMessageDialog(this, "WRONG ID PERSON", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        if (validName(name)) {
            JOptionPane.showMessageDialog(this, "WRONG NAME", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        if (validGender(gender)) {
            JOptionPane.showMessageDialog(this, "WRONG GENDER", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        if (validAge(age)) {
            JOptionPane.showMessageDialog(this, "WRONG AGE", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        if (validAddress(address)) {
            JOptionPane.showMessageDialog(this, "WRONG ADDRESS", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        return allValid;
    }

    private boolean validIdEmployee(int id) {
        return id < 0;
    }

    private boolean validSalary(int salary) {
        return salary < 0;
    }

    private boolean allParametersEmployeeValids(int idEmployee, int salary) {
        boolean allValid = true;
        if (validIdEmployee(idEmployee)) {
            JOptionPane.showMessageDialog(this, "WRONG ID EMPLOYEE", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        if (validSalary(salary)) {
            JOptionPane.showMessageDialog(this, "WRONG SALARY", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        return allValid;
    }

    private boolean validIdCustomer(int id) {
        return id < 0;
    }

    private boolean validDate(LocalDate date) {
        return false;
    }

    private boolean validGender(boolean vip) {
        return false;
    }

    private boolean allParametersCustomerValids(int idCustomer, LocalDate date, boolean vip) {
        boolean allValid = true;
        if (validIdCustomer(idCustomer)) {
            JOptionPane.showMessageDialog(this, "WRONG ID CUSTOMER", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        if (validDate(date)) {
            JOptionPane.showMessageDialog(this, "WRONG DATE", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        if (validGender(vip)) {
            JOptionPane.showMessageDialog(this, "WRONG GENDER", "WRONG", JOptionPane.ERROR_MESSAGE);
            allValid = false;
        }
        return allValid;
    }

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        String typeResult = typeValue.getSelectedItem().toString();
        if (typeResult.equals("-")) {
            JOptionPane.showMessageDialog(this, "You have to select whether you are an employee or a customer", "WRONG", JOptionPane.ERROR_MESSAGE);
        } else {
            int idResult = (int) idValue.getValue();
            String nameResult = nameValue.getText();
            String genderTaked = genderValue.getSelectedItem().toString();
            char genderResult = genderTaked.charAt(0);
            int ageResult = (int) ageValue.getValue();
            String addressResult = addressValue.getText();

            if (allParametersPersonValids(idResult, nameResult, genderResult, ageResult, addressResult)) {
                switch (typeResult) {
                    case "EMPLOYEE" -> {
                        int idEmployeeResult = (int) idEmployeeValue.getValue();
                        int salaryResult = (int) salaryValue.getValue();
                        if (allParametersEmployeeValids(idEmployeeResult, salaryResult)) {
                            Employee e = new Employee(idEmployeeResult, salaryResult, idResult, nameResult, genderResult, ageResult, addressResult, getVehicle());
                            try {
                                addPerson(e);
                                JOptionPane.showMessageDialog(this, "SUCCESSFULLY CREATED EMPLOYEE WITH CAR", "EMPLOYEE CREATED", JOptionPane.INFORMATION_MESSAGE);
                                tabbedPanel.setSelectedIndex(0);
                            } catch (PersonException ex) {
                                JOptionPane.showMessageDialog(this, ex.getMessage(), "WRONG", JOptionPane.ERROR_MESSAGE);

                            }
                        }
                    }
                    case "CUSTOMER" -> {
                        int idCustomerResult = (int) idCustomerValue.getValue();
                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                        LocalDate dateResult = LocalDate.parse(dateValue.getText(), formatter);
                        boolean vipResult = vipValue.isSelected();

                        if (allParametersCustomerValids(idCustomerResult, dateResult, vipResult)) {
                            Customer c = new Customer(idCustomerResult, dateResult, vipResult, idResult, nameResult, genderResult, ageResult, addressResult, getVehicle());
                            try {
                                addPerson(c);
                                JOptionPane.showMessageDialog(this, "SUCCESSFULLY CREATED EMPLOYEE WITH CAR", "EMPLOYEE CREATED", JOptionPane.INFORMATION_MESSAGE);
                                tabbedPanel.setSelectedIndex(0);
                            } catch (PersonException cx) {
                                JOptionPane.showMessageDialog(this, cx.getMessage(), "WRONG", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void typeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeValueActionPerformed
        switch (typeValue.getSelectedItem().toString()) {
            case "-" -> {
                idEmployeeLabel.setVisible(false);
                idEmployeeValue.setVisible(false);
                salaryLabel.setVisible(false);
                salaryValue.setVisible(false);
                idCustomerLabel.setVisible(false);
                idCustomerValue.setVisible(false);
                dateLabel.setVisible(false);
                dateValue.setVisible(false);
                vipLabel.setVisible(false);
                vipValue.setVisible(false);
                registerButton.setVisible(false);
            }
            case "EMPLOYEE" -> {
                // Hacer visible los parametros de empleado
                idEmployeeLabel.setVisible(true);
                idEmployeeValue.setVisible(true);
                salaryLabel.setVisible(true);
                salaryValue.setVisible(true);

                registerButton.setVisible(true);

                // Ocultar la parte de cliente
                idCustomerLabel.setVisible(false);
                idCustomerValue.setVisible(false);
                dateLabel.setVisible(false);
                dateValue.setVisible(false);
                vipLabel.setVisible(false);
                vipValue.setVisible(false);
            }
            case "CUSTOMER" -> {
                // Hacer visible los parametros de cliente
                idCustomerLabel.setVisible(true);
                idCustomerValue.setVisible(true);
                dateLabel.setVisible(true);
                dateValue.setVisible(true);
                vipLabel.setVisible(true);
                vipValue.setVisible(true);

                // Ocultar la parte de empleado
                idEmployeeLabel.setVisible(false);
                idEmployeeValue.setVisible(false);
                salaryLabel.setVisible(false);
                salaryValue.setVisible(false);

                registerButton.setVisible(true);

            }
        }
    }//GEN-LAST:event_typeValueActionPerformed

    private void vipValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vipValueActionPerformed
        Color green = new java.awt.Color(0, 255, 0);
        Color red = new java.awt.Color(255, 0, 0);
        if (vipValue.getBackground().equals(red)) {
            vipValue.setBackground(green);
        } else if (vipValue.getBackground().equals(green)) {
            vipValue.setBackground(red);
        }
    }//GEN-LAST:event_vipValueActionPerformed

    private void vipValue1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vipValue1ActionPerformed
        Color green = new java.awt.Color(0, 255, 0);
        Color red = new java.awt.Color(255, 0, 0);
        if (vipValue1.getBackground().equals(red)) {
            vipValue1.setBackground(green);
        } else if (vipValue1.getBackground().equals(green)) {
            vipValue1.setBackground(red);
        }
    }//GEN-LAST:event_vipValue1ActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int idResult = ((Number) idValue1.getValue()).intValue();
        String nameResult = nameValue1.getText();
        String genderTaked = genderValue1.getSelectedItem().toString();
        char genderResult = genderTaked.charAt(0);
        int ageResult = ((Number) ageValue1.getValue()).intValue();
        String addressResult = addressValue1.getText();

        if (allParametersPersonValids(idResult, nameResult, genderResult, ageResult, addressResult)) {
            String employeeOrCustomer = "EMPLOYEE";
            if (!idEmployeeLabel1.isVisible()) {
                employeeOrCustomer = "CUSTOMER";
            }
            switch (employeeOrCustomer) {
                case "EMPLOYEE" -> {
                    int idEmployeeResult = ((Number) idEmployeeValue1.getValue()).intValue();
                    int salaryResult = ((Number) salaryValue1.getValue()).intValue();
                    if (allParametersEmployeeValids(idEmployeeResult, salaryResult)) {
                        Employee e = new Employee(idEmployeeResult, salaryResult, idResult, nameResult, genderResult, ageResult, addressResult, getVehicle());
                        try {
                            updatePerson(e);
                            JOptionPane.showMessageDialog(this, "SUCCESSFULLY UPDATED EMPLOYEE WITH CAR", "EMPLOYEE CREATED", JOptionPane.INFORMATION_MESSAGE);
                            tabbedPanel.setSelectedIndex(0);
                        } catch (PersonException ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage(), "WRONG", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
                case "CUSTOMER" -> {
                    int idCustomerResult = ((Number) idCustomerValue1.getValue()).intValue();
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                    LocalDate dateResult = LocalDate.parse(dateValue1.getText(), formatter);
                    boolean vipResult = vipValue1.isSelected();

                    if (allParametersCustomerValids(idCustomerResult, dateResult, vipResult)) {
                        Customer c = new Customer(idCustomerResult, dateResult, vipResult, idResult, nameResult, genderResult, ageResult, addressResult, getVehicle());
                        try {
                            updatePerson(c);
                            JOptionPane.showMessageDialog(this, "SUCCESSFULLY UPDATE EMPLOYEE WITH CAR", "EMPLOYEE CREATED", JOptionPane.INFORMATION_MESSAGE);
                            tabbedPanel.setSelectedIndex(0);
                        } catch (PersonException cx) {
                            JOptionPane.showMessageDialog(this, cx.getMessage(), "WRONG", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void vehicleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleButtonActionPerformed
        createVehicle cv = new createVehicle(this, true);
        cv.setLocationRelativeTo(null);
        cv.setVisible(true);
    }//GEN-LAST:event_vehicleButtonActionPerformed

    public static int idToDelete;

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        confirmDelete cd = new confirmDelete(this, true);
        cd.setLocationRelativeTo(null);
        cd.setVisible(true);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        String selectedItem = checkValue.getSelectedItem().toString();
        String[] parts = selectedItem.split(" ");
        int selectedId = Integer.parseInt(parts[0]);

        Person p = null;

        try {
            p = getPersonById(selectedId);
        } catch (PersonException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "WRONG", JOptionPane.ERROR_MESSAGE);
        }

        // PARAMETROS PERSONA
        idLabel1.setVisible(false);
        idValue1.setVisible(false);
        idValue1.setValue(p.getID());

        nameLabel1.setVisible(true);
        nameValue1.setVisible(true);
        nameValue1.setText(p.getName());

        genderLabel1.setVisible(true);
        genderValue1.setVisible(true);
        genderValue1.setSelectedIndex(p.getGender() == 'M' ? 1 : 0);

        ageLabel1.setVisible(true);
        ageValue1.setVisible(true);
        ageValue1.setValue(p.getAge());

        addressLabel1.setVisible(true);
        addressValue1.setVisible(true);
        addressValue1.setText(p.getAddress());

        // PARAMETROS EMPLEADOS Y CLIENTES
        if (p instanceof Employee) {
            idCustomerLabel1.setVisible(false);
            idCustomerValue1.setVisible(false);
            dateLabel1.setVisible(false);
            dateValue1.setVisible(false);
            vipLabel1.setVisible(false);
            vipValue1.setVisible(false);

            Employee e = (Employee) p;
            idEmployeeLabel1.setVisible(true);
            idEmployeeValue1.setVisible(true);
            idEmployeeValue1.setValue(e.getIDEMPLOYEE());

            salaryLabel1.setVisible(true);
            salaryValue1.setVisible(true);
            salaryValue1.setValue(e.getSalary());
        }
        if (p instanceof Customer) {
            idEmployeeLabel1.setVisible(false);
            idEmployeeValue1.setVisible(false);
            salaryLabel1.setVisible(false);
            salaryValue1.setVisible(false);

            Customer c = (Customer) p;
            idCustomerLabel1.setVisible(true);
            idCustomerValue1.setVisible(true);
            idCustomerValue1.setValue(c.getIDCUSTOMER());

            dateLabel1.setVisible(true);
            dateValue1.setVisible(true);
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            dateValue1.setText(c.getDateRegister().format(formatter));

            vipLabel1.setVisible(true);
            vipValue1.setVisible(true);
            vipValue1.setSelected(c.isVip());
            if (c.isVip()) {
                vipValue1.setBackground(new java.awt.Color(0, 255, 0));
            } else {
                vipValue1.setBackground(new java.awt.Color(255, 0, 0));
            }
        }

        // OTROS
        vehicleLabel1.setVisible(true);
        vehicleButton1.setVisible(true);

        updateButton.setVisible(true);
    }//GEN-LAST:event_checkButtonActionPerformed

    private void vehicleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleButton1ActionPerformed
        createVehicle cv = new createVehicle(this, true);
        cv.setLocationRelativeTo(null);
        cv.setVisible(true);
    }//GEN-LAST:event_vehicleButton1ActionPerformed

    private void checkButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButton1ActionPerformed
        personParameters.setVisible(true);

        String selectedItem = selectPerson.getSelectedItem().toString();
        String[] parts = selectedItem.split(" ");
        int selectedId = Integer.parseInt(parts[0]);
        idToDelete = selectedId;
        try {
            personParameters.setText(getPersonById(selectedId).toString());
        } catch (PersonException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkButton1ActionPerformed

    private void selectPerson1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectPerson1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_selectPerson1ItemStateChanged

    private void checkButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButton2ActionPerformed
        personParameters3.setVisible(true);

        String selectedItem = selectPerson1.getSelectedItem().toString();
        String[] parts = selectedItem.split(" ");
        int selectedId = Integer.parseInt(parts[0]);
        idToDelete = selectedId;
        try {
            personParameters3.setText(getPersonById(selectedId).toString());
        } catch (PersonException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkButton2ActionPerformed

    private void sendSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendSearchButtonActionPerformed
        ArrayList<Person> persons = null;
        try {
            persons = getListOfPersonsByName(nameValue2.getText());
        } catch (PersonException ex) {
            JOptionPane.showMessageDialog(this, "THIS NAME DOESN'T EXIST", "WRONG", JOptionPane.ERROR_MESSAGE);
        }
        jTextArea1.setText("");
        if (persons == null) {
            JOptionPane.showMessageDialog(this, "THIS NAME DOESN'T EXIST", "WRONG", JOptionPane.ERROR_MESSAGE);
        } else {
            for (Person p : persons) {
                switch (p.getClass().getSimpleName()) {
                    case "Employee" -> {
                        Employee e = (Employee) p;
                        jTextArea1.append(e.toString());
                    }
                    case "Customer" -> {
                        Customer c = (Customer) p;
                        jTextArea1.append(c.toString());
                    }
                }
                jTextArea1.append("\n");
            }
        }
    }//GEN-LAST:event_sendSearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel addressLabel1;
    private javax.swing.JTextField addressValue;
    private javax.swing.JTextField addressValue1;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JLabel ageLabel1;
    private javax.swing.JSpinner ageValue;
    private javax.swing.JSpinner ageValue1;
    private javax.swing.JButton checkButton;
    private javax.swing.JButton checkButton1;
    private javax.swing.JButton checkButton2;
    private javax.swing.JComboBox<String> checkValue;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel dateLabel1;
    private javax.swing.JTextField dateValue;
    private javax.swing.JTextField dateValue1;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel deleteLabelMenuOpc;
    private javax.swing.JPanel deleteTab;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel genderLabel1;
    private javax.swing.JComboBox<String> genderValue;
    private javax.swing.JComboBox<String> genderValue1;
    private javax.swing.JLabel idCustomerLabel;
    private javax.swing.JLabel idCustomerLabel1;
    private javax.swing.JSpinner idCustomerValue;
    private javax.swing.JSpinner idCustomerValue1;
    private javax.swing.JLabel idEmployeeLabel;
    private javax.swing.JLabel idEmployeeLabel1;
    private javax.swing.JSpinner idEmployeeValue;
    private javax.swing.JSpinner idEmployeeValue1;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idLabel1;
    private javax.swing.JSpinner idValue;
    private javax.swing.JSpinner idValue1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelNumberOfPersons;
    private javax.swing.JLabel labelPerson;
    private javax.swing.JLabel labelPerson1;
    private javax.swing.JLabel labelPerson3;
    private javax.swing.JPanel menuOpc;
    private javax.swing.JLabel modifyLabelMenuOpc;
    private javax.swing.JPanel modifyTab;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JTextField nameValue;
    private javax.swing.JTextField nameValue1;
    private javax.swing.JTextField nameValue2;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextArea personParameters;
    private javax.swing.JTextArea personParameters3;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel registerLabelMenuOpc;
    private javax.swing.JPanel registerTab;
    private javax.swing.JLabel salaryLabel;
    private javax.swing.JLabel salaryLabel1;
    private javax.swing.JSpinner salaryValue;
    private javax.swing.JSpinner salaryValue1;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JScrollPane scrollPanel3;
    private javax.swing.JLabel searchLabelMenuOpc;
    private javax.swing.JPanel searchTab;
    private javax.swing.JComboBox<String> selectPerson;
    private javax.swing.JComboBox<String> selectPerson1;
    private javax.swing.JButton sendSearchButton;
    private javax.swing.JLabel showLabelMenuOpc;
    private javax.swing.JPanel showTab;
    private javax.swing.JLabel spliter1;
    private javax.swing.JLabel spliter2;
    private javax.swing.JLabel spliter3;
    private javax.swing.JLabel spliter4;
    private javax.swing.JTabbedPane tabbedPanel;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JComboBox<String> typeValue;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton vehicleButton;
    private javax.swing.JButton vehicleButton1;
    private javax.swing.JLabel vehicleLabel;
    private javax.swing.JLabel vehicleLabel1;
    private javax.swing.JLabel vipLabel;
    private javax.swing.JLabel vipLabel1;
    private javax.swing.JToggleButton vipValue;
    private javax.swing.JToggleButton vipValue1;
    private javax.swing.JPanel welcomeTab;
    private javax.swing.JLabel welcomeText;
    private javax.swing.JLabel welcomeText1;
    // End of variables declaration//GEN-END:variables
}
